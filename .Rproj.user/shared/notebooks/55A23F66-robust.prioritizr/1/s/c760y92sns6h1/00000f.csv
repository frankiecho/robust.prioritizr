"0","## Note: here I exploited the fact that the min set objective does not actually use the feature groupings behind the scenes"
"0","## Note: add_relative_targets will be a bit tricky to interpret as the ""number of features"" in each realization is different... will need to override with the max of the group (i.e. relative to the maximum of number of features across all realisations), or the mean... need to be transparent"
"0",""
"0","sim_features_robust_raster <- c(sim_feature_1, rast(feature_2), rast(feature_2))"
"0","names(sim_features_robust_raster) <- c(paste0(rep('f1_', nlyr(sim_feature_1)),1:nlyr(sim_feature_1)), "
"0","                                       'f2_1', 'f2_2')"
"0","feature_groupings <- c(rep('f1', nlyr(sim_feature_1)), 'f2', 'f2')"
"0",""
"0","p2 <- problem(sim_pu_raster, sim_features_robust_raster) %>%"
"0","  add_constant_robust_constraints(groups = feature_groupings, confidence_level = 1) %>%"
"0","  add_absolute_targets(target) %>%"
"0","  add_robust_min_set_objective() %>%"
"0","  add_binary_decisions() %>%"
"0","  add_default_solver(verbose = FALSE)"
"0",""
"0","s2 <- solve(p2)"
"1","No match for"
"1"," threads - ? for list of commands
No match for 1 - ? for list of commands
"
"0","plot(s2)"
